[tool.poetry]
name = "discord-rag-backend"
version = "0.1.0"
description = "FastAPI backend for Discord RAG Bot"
authors = ["Nabin Kim <nabinkim0318@gmail.com>"]
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
pydantic = "^2.7.1"
httpx = "^0.27.0"
loguru = "^0.7.2"
requests = "^2.32.0"
prometheus-client = "^0.22.1"
prometheus-fastapi-instrumentator = "^7.1.0"
# rag_agent = { path = "../rag_agent", develop = true }  # Docker 빌드 시 주석 처리
sqlmodel = "^0.0.24"
alembic = "^1.16.5"
weaviate-client = "^4.0.0"
openai = "^1.0.0"
discord-py-interactions = "^5.15.0"
psycopg2-binary = "^2.9.10"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43"}

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
isort = "^5.13.2"
flake8 = "^7.0.0"
pre-commit = "^3.7.0"
pytest = "^8.2.0"
pytest-asyncio = "^0.24.0"
httpx = "^0.27.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["app"]
known_third_party = ["fastapi", "pydantic", "sqlmodel", "loguru", "weaviate", "prometheus_client", "prometheus_fastapi_instrumentator"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
