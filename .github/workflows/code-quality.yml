name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          poetry install --no-interaction --no-ansi

      - name: Install RAG agent dependencies
        working-directory: ./rag_agent
        run: |
          poetry install --no-interaction --no-ansi

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          npm ci

      - name: Run backend linting
        working-directory: ./backend
        run: |
          poetry run isort --check-only --profile black --line-length 88 .
          poetry run ruff check --line-length 88 .
          poetry run ruff format --check .

      - name: Run RAG agent linting
        working-directory: ./rag_agent
        run: |
          poetry run isort --check-only --profile black --line-length 88 .
          poetry run ruff check --line-length 88 .
          poetry run ruff format --check .

      - name: Run frontend linting
        working-directory: ./frontend
        run: |
          npm run format:check

      - name: Run backend tests
        working-directory: ./backend
        run: |
          poetry run pytest tests/ -v --tb=short

      - name: Run RAG agent tests
        working-directory: ./rag_agent
        run: |
          poetry run pytest tests/ -v --tb=short

      - name: Run frontend tests
        working-directory: ./frontend
        run: |
          npm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            backend/htmlcov/
            rag_agent/htmlcov/
            frontend/coverage/
          retention-days: 7
