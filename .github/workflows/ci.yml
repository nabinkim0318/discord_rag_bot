name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set Git to use LF line endings (backend)
        run: git config --global core.autocrlf input

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies (Backend)
        run: poetry install --no-interaction --no-ansi

      - name: Run Linting (Backend)
        run: |
          poetry run isort --check-only --profile black --line-length 88 .
          poetry run ruff check --line-length 88 .
          poetry run ruff format --check .

      - name: Run Tests (Backend)
        run: poetry run pytest

  rag_agent:
    name: RAG Agent Pipeline
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: rag_agent

    steps:
      - uses: actions/checkout@v4

      - name: Set Git to use LF line endings (rag_agent)
        run: git config --global core.autocrlf input

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies (RAG Agent)
        run: poetry install --no-interaction --no-ansi

      - name: Run Linting (RAG Agent)
        run: |
          poetry run isort --check-only --profile black --line-length 88 .
          poetry run ruff check --line-length 88 .
          poetry run ruff format --check .

      - name: Run Tests (RAG Agent)
        run: poetry run pytest

  frontend:
    name: Frontend (React/Next.js)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set Git to use LF line endings (frontend)
        run: git config --global core.autocrlf input

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (Frontend)
        run: npm ci

      - name: Run Prettier & Lint (Frontend)
        run: |
          npx prettier --check .
          npx eslint . --ext .js,.ts,.tsx || true  # optional: remove '|| true' to fail on lint errors

      - name: Run Tests (Frontend)
        run: npm run test --if-present # if you add frontend tests later
